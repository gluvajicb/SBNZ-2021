package ChampionRecommender.PlaystyleRules;
dialect  "mvel"

import com.example.demo.Model.Champion;
import com.example.demo.Model.ChampionRecommendSession;
import com.example.demo.Model.Enums.*;

rule "Recommend champion based on Playstyle preference, ROAMING"
agenda-group "roaming"
no-loop
    when
        $champion: Champion($name: name, playstyle == Playstyle.ROAMING, playstyleChecked == false)
        $session: ChampionRecommendSession($championList: championList)
    then
        modify($session){ updateScore($champion, 10)}
        modify($champion){ setPlaystyleChecked(true)}

end

rule "Recommend champion based on Playstyle preference, SPLITPUSHING"
agenda-group "splitpushing"
no-loop
    when
        $champion: Champion($name: name, playstyle == Playstyle.SPLITPUSHING, playstyleChecked == false)
        $session: ChampionRecommendSession($championList: championList)
    then
        modify($session){ updateScore($champion, 10)}
        modify($champion){ setPlaystyleChecked(true)}

end

rule "Recommend champion based on Playstyle preference, TEAMFIGHTING"
agenda-group "teamfighting"
no-loop
    when
        $champion: Champion($name: name, playstyle == Playstyle.TEAMFIGHTING, playstyleChecked == false)
        $session: ChampionRecommendSession($championList: championList)
    then
        System.out.println("---------------------------------------");
        System.out.println("Rule for playstyle: \n");

        System.out.println($champion.getName() + " has playstyle TEAMFIGHTING and gets 10 points ");
        System.out.println("---------------------------------------");
        modify($session){ updateScore($champion, 10)}
        modify($champion){ setPlaystyleChecked(true)}

end
