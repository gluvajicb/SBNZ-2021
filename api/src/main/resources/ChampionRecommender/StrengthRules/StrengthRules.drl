package ChampionRecommender.StrengthRules;
dialect  "mvel"

import com.example.demo.Model.*;
import com.example.demo.Model.Enums.*;


rule "Recommend champion based on Strenght preference by early game"
agenda-group "earlygame"
no-loop
    when
        $champion: Champion($name: name, strength == Strength.EARLY_GAME, strengthChecked == false)
        $session: ChampionRecommendSession($championList: championList)
        $answers: ChampionRecommendAnswers(prefStrength == Strength.EARLY_GAME)
    then
        modify($session){ updateScore($champion, 5)}
        modify($champion){ setStrengthChecked(true)}

end

rule "Recommend champion based on Strenght preference by mid game"
agenda-group "midgame"
no-loop
    when
        $champion: Champion($name: name, strength == Strength.MID_GAME, strengthChecked == false )
        $session: ChampionRecommendSession($championList: championList)
        $answers: ChampionRecommendAnswers(prefStrength == Strength.MID_GAME)

    then

        modify($session){ updateScore($champion, 5)}
        modify($champion){ setStrengthChecked(true)}


end

rule "Recommend champion based on Strenght preference by late game"
agenda-group "lategame"
no-loop
    when
        $champion: Champion($name: name, strength == Strength.LATE_GAME, strengthChecked == false )
        $session: ChampionRecommendSession($championList: championList)
        $answers: ChampionRecommendAnswers(prefStrength == Strength.LATE_GAME)

    then
        modify($session){ updateScore($champion, 5)}
        modify($champion){ setStrengthChecked(true)}

end

